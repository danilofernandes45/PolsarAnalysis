library(raster)
library(png)
cv_filter <- function(hhhh, hvhv, vvvv, window_dim){
parallel_cv <- function(x) localFun(x, x, ngb = window_dim, fun = function(x,y) sd(x)/mean(x))
beginCluster()
hhhh_cv <- clusterR(hhhh, parallel_cv, filename = "hhhh_cv.grd")
hvhv_cv <- clusterR(hvhv, parallel_cv, filename = "hvhv_cv.grd")
vvvv_cv <- clusterR(vvvv, parallel_cv, filename = "vvvv_cv.grd")
endCluster()
#dimensões dos blocos dos objetos RasterLayer filtrados do qual deve-se gerar a imagem
begin_row <- 1
begin_col <- 1
nrows <- nrow(hhhh_cv)
ncols <- ncol(hhhh_cv)
matrix_cv <- array(0, dim = c(nrow, ncol, 3))
matrix_cv[,,1] <- getValuesBlock(hhhh_cv, nrow = begin_row, nrows = nrows, ncol = begin_col, ncols = ncols, format = 'matrix')
matrix_cv[,,2] <- getValuesBlock(hvhv_cv, nrow = begin_row, nrows = nrows, ncol = begin_col, ncols = ncols, format = 'matrix')
matrix_cv[,,3] <- getValuesBlock(vvvv_cv, nrow = begin_row, nrows = nrows, ncol = begin_col, ncols = ncols, format = 'matrix')
writePNG(matrix_cv, target = "image.png")
}
setwd("~/PolsarAnalysis/Data/MLC_Data_Foulum_DK")
hhhh <- raster("hhhh.grd")
hvhv <- raster("hvhv.grd")
vvvv <- raster("vvvv.grd")
hhhh <- raster(nrow = 100, ncol = 100)
hhhh[] <- runif(10000)
hvhv <- raster(nrow = 100, ncol = 100)
hvhv[] <- runif(10000)
vvvv <- raster(nrow = 100, ncol = 100)
vvvv[] <- runif(10000)
cv_filter(hhhh, hvhv, vvvv, window_dim = 3)
cv_filter <- function(hhhh, hvhv, vvvv, window_dim){
parallel_cv <- function(x) localFun(x, x, ngb = window_dim, fun = function(x,y) sd(x)/mean(x))
beginCluster()
hhhh_cv <- clusterR(hhhh, parallel_cv, filename = "hhhh_cv.grd")
hvhv_cv <- clusterR(hvhv, parallel_cv, filename = "hvhv_cv.grd")
vvvv_cv <- clusterR(vvvv, parallel_cv, filename = "vvvv_cv.grd")
endCluster()
#dimensões dos blocos dos objetos RasterLayer filtrados do qual deve-se gerar a imagem
begin_row <- 1
begin_col <- 1
nrows <- nrow(hhhh_cv)
ncols <- ncol(hhhh_cv)
matrix_cv <- array(0, dim = c(nrows, ncols, 3))
matrix_cv[,,1] <- getValuesBlock(hhhh_cv, nrow = begin_row, nrows = nrows, ncol = begin_col, ncols = ncols, format = 'matrix')
matrix_cv[,,2] <- getValuesBlock(hvhv_cv, nrow = begin_row, nrows = nrows, ncol = begin_col, ncols = ncols, format = 'matrix')
matrix_cv[,,3] <- getValuesBlock(vvvv_cv, nrow = begin_row, nrows = nrows, ncol = begin_col, ncols = ncols, format = 'matrix')
writePNG(matrix_cv, target = "image.png")
}
cv_filter(hhhh, hvhv, vvvv, window_dim = 3)
