else if(scatterer == "right helix"){
return ( dist_right_helix[ which(dist_right_helix == min) ] )
}
else if(scatterer == "random volume"){
return ( dist_rand_vol[ which(dist_rand_vol == min) ] )
}
else if(scatterer == "trihedral"){
return ( dist_trihedral[ which(dist_trihedral == min) ] )
}
return( c(0) )
}
plotScattererMap <- function(dim, title = ""){
my_colours <- c("-1/4-wave" = "yellow", "+1/4-wave" = "orange", "Cylinder" = "red", "Dihedral" = "blue", "Dipole" = "navy",
"Left helix" = "peru", "NA" = "snow", "Narrow dihedral" = "greenyellow", "Random volume" = "green3",
"Right helix" = "purple", "Trihedral" = "magenta")
sample <- getMapMatrix(dim)
data_frame <- data.frame(melt(sample))
data_frame[1] <- data_frame[1] + dim[1]
data_frame[2] <- data_frame[2] + dim[3]
ggplot(data = data_frame, aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_manual(values = my_colours) + xlab("column") + ylab("row") +
ggtitle(title) +
theme(plot.title = element_text(hjust = 0.5))
}
plotHeatmap <- function(scatterer, dim, title = ""){
similarities <- getSimilarity(scatterer, dim)
ggplot( data = data.frame(melt(similarities)), aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_gradient() + ylab("row") + xlab("column") +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramBeta <- function(scatterer, dim, filter = FALSE, title = "", range = c(0, 1)){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getGeoDist(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#Plot
x <- seq( from = range[1], to = range[2], by = 0.001)
desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..), bins = 45) + xlab("x") +
geom_line(aes(x = x, y = dbeta(x, alpha, beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramNorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("N(", round(mean, 3), ", ", round(sd, 3), "²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dnorm(x, mean, sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramGamma <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
alpha <- mean ^2 / sd ^2
beta <- sd^2 / mean
#Plot
x <- seq( from = 0, to = 0.2, by = 0.001)
desc <- paste("Gamma(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dgamma(x, shape = alpha, scale = beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
logit <- function(x){
return( log(x) / log(1-x) )
}
plotHistogramLogitnorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
logit <- logit(sample)
mean <- mean( logit )
sd <- sd(logit)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("LN(", round(mean, 3), ", ", round(sd, 3), "²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dlogitnorm(x, mu = mean, sigma = sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
# dpert <- function(x, min, mode, max){
#
#   alpha <- (4*mode + max - 5*min)/(max - min)
#   beta <- (5*max - min - 4*mode)/(max - min)
#   return( ( (x - min)^(alpha - 1) * (max - x)^(beta - 1) ) / ( beta(alpha, beta) * (max - min) ^ (alpha + beta - 1) ) )
#
# }
plotHistogramPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
#shape <- 3.914062
shape <- 4
mode <- ((shape + 2)*mean(sample) - min - max)/shape
#Plot
x <- seq( from = min, to = max, by = 0.001)
desc <- paste("PERT(", round(min, 3), ", ", round(mode, 3), ", ", round(max, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dpert(x, min = min, mode = mode, max = max), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotQQPlotBeta <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
}
plotQQPlotPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mode <- (6*mean(sample) - min - max)/4
params <- list(min = min, mode = mode, max = max)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qpert, dparams = params) +
stat_qq_line(distribution = qpert, dparams = params)
}
ksTestBeta <- function(scatterer, dim, filter = FALSE){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
return( ks.test(sample, "pbeta", shape1 = alpha, shape2 = beta))
}
dim = c(100, 55, 1, 80) #Sample
plotHeatmap("trihedral", dim)
plotHeatmap("random volume", dim)
#Regions selected
writePNG(matrix[50:155, 1:80,], target = "region1_soybeans_232_231.png")
writePNG(matrix[50:155, 1:80,], target = "region1_soybeans_232.png")
writePNG(matrix[50:165, 1:80,], target = "region1_soybeans_232.png")
writePNG(matrix[50:175, 1:80,], target = "region1_soybeans_232.png")
writePNG(matrix[50:175, 1:90,], target = "region1_soybeans_232.png")
writePNG(matrix[50:175, 1:85,], target = "region1_soybeans_232.png")
writePNG(matrix[50:175, 1:90,], target = "region1_soybeans_232.png")
writePNG(matrix[50:175, 1:80,], target = "region1_soybeans_232.png")
writePNG(matrix[50:175, 40:80,], target = "region1_soybeans_232.png")
writePNG(matrix[60:170, 40:80,], target = "region1_soybeans_232.png")
writePNG(matrix[70:165, 40:80,], target = "region1_soybeans_232.png")
writePNG(matrix[80:165, 40:80,], target = "region1_soybeans_232.png")
writePNG(matrix[85:165, 40:80,], target = "region1_soybeans_232.png")
writePNG(matrix[90:165, 40:80,], target = "region1_soybeans_232.png")
writePNG(matrix[100:165, 40:80,], target = "region1_soybeans_232.png")
65*40
dim <- (100, 65, 40, 40)
dim <- c(100, 65, 40, 40)
plotHistogramBeta("trihedral", dim, filter = TRUE)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
data <- getFilteredData("trihedral", dim)
data <- getFilteredData("random volume", dim)
dim <- c(100, 65, 30, 50)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
plotScattererMap(dim)
65*40
dim <- c(100, 65, 40, 40)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
dim1 <- c(100, 65, 50, 30)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
dim1 <- c(100, 65, 45, 35)
plotHistogramBeta("random volume", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(100, 65, 50, 30)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
dim1
dim
65*50
65*30
65*40
dim2<-c(100, 65, 45, 35)
plotHistogramBeta("random volume", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
dim2<-c(100, 65, 46, 34)
plotHistogramBeta("random volume", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
dim2<-c(100, 65, 42, 38)
ksTestBeta("random volume", dim2, filter = TRUE)
dim2<-c(100, 65, 43, 37)
ksTestBeta("random volume", dim2, filter = TRUE)
dim2<-c(100, 65, 45, 35)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
plotHistogramBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
dim <- dim1
65*30
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
plotScattererMap(dim)
ksTestBeta("trihedral", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
ksTestBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
4.02/(4.02+11.28)
#1TH SAMPLE -> SIZE = 1275
#Beta(3.039, 11.602)
#mean = 0.2075
#p-value = 0.2444
#2TH SAMPLE -> SIZE = 649
#Beta(4.752, 15.506)
#mean = 0.2345
#p-value = 0.9686
#3TH SAMPLE -> SIZE = 474
#Beta(4.553, 13.68)
#mean = 0.2497
#p-value = 0.7134
#4TH SAMPLE -> SIZE = 596
#Beta(4.217, 12.532)
#mean = 0.2517
#p-value = 0.4218
#5TH SAMPLE -> SIZE = 518
#Beta(4.02, 11.28)
#mean = 0.2627
#p-value = 0.1626
#1TH SAMPLE -> SIZE = 132
#Beta(9.334, 18.516)
#mean = 0.3351
#p-value = 0.3404
#2TH SAMPLE -> SIZE = 387
#Beta(8.654, 17.722)
#mean = 0.3281
#p-value = 0.4521
#3TH SAMPLE -> SIZE = 649
#Beta(5.902, 10.969)
#mean = 0.3498
#p-value = 0.0695
#4TH SAMPLE -> SIZE = 630
#Beta(5.891, 10.621)
#mean = 0.3567
#p-value = 0.3572
#5TH SAMPLE -> SIZE = 811
#Beta(6.582, 11.241)
#mean = 0.3693
#p-value = 0.63
tri_alpha <- data.frame(
X = 1:5,
SB232 = c(3.039, 4.752, 4.553, 4.217, 4.02), #SOYBEANS 232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB232 = c(11.602, 15.506, 13.68, 12.532, 11.28), #SOYBEANS 232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
rv_alpha <- data.frame(
X = 1:5,
SB232 = c(9.334, 8.654, 5.902, 5.891, 6.582), #SOYBEANS 231-232
CN43 = c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
WT255 = c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- c(
X = 1:5,
SB232 = c(18.516, 17.722, 10.969, 10.621, 11.241), #SOYBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
library(ggplot2)
#Analysis per sample
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
writePNG(matrix[25:80, 30:80,], target = "region2_canola_43.png")
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
dim <- c(25, 55, 30, 50)
plotHeatmap("trihedral", dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
#Analysis per sample
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
rv_beta <- c(
X = 1:5,
SB232 = c(18.516, 17.722, 10.969, 10.621, 11.241), #SOYBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
rv_beta <- data.frame(
X = 1:5,
SB232 = c(18.516, 17.722, 10.969, 10.621, 11.241), #SOYBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
tri_alpha / (tri_alpha _ tri_beta)
tri_alpha / (tri_alpha + tri_beta)
4.813/(4.813+13.007)
x <- tri_alpha / (tri_alpha + tri_beta)
x$X <- 1:5
x
tri_mean <- tri_alpha / (tri_alpha + tri_beta)
tri_mean$X <- 1:5
rv_mean <- rv_alpha / (rv_alpha + rv_beta)
rv_mean$X <- 1:5
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_mean, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_mean, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
