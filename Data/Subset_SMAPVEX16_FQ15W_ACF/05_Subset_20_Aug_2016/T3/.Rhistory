similarities <- getSimilarity(scatterer, dim)
ggplot( data = data.frame(melt(similarities)), aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_gradient() + ylab("row") + xlab("column") +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramBeta <- function(scatterer, dim, filter = FALSE, title = "", range = c(0, 1)){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getGeoDist(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#Plot
x <- seq( from = range[1], to = range[2], by = 0.001)
desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..), bins = 45) + xlab("x") +
geom_line(aes(x = x, y = dbeta(x, alpha, beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramNorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("N(", round(mean, 3), ", ", round(sd, 3), "²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dnorm(x, mean, sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramGamma <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
alpha <- mean ^2 / sd ^2
beta <- sd^2 / mean
#Plot
x <- seq( from = 0, to = 0.2, by = 0.001)
desc <- paste("Gamma(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dgamma(x, shape = alpha, scale = beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
logit <- function(x){
return( log(x) / log(1-x) )
}
plotHistogramLogitnorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
logit <- logit(sample)
mean <- mean( logit )
sd <- sd(logit)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("LN(", round(mean, 3), ", ", round(sd, 3), "²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dlogitnorm(x, mu = mean, sigma = sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
# dpert <- function(x, min, mode, max){
#
#   alpha <- (4*mode + max - 5*min)/(max - min)
#   beta <- (5*max - min - 4*mode)/(max - min)
#   return( ( (x - min)^(alpha - 1) * (max - x)^(beta - 1) ) / ( beta(alpha, beta) * (max - min) ^ (alpha + beta - 1) ) )
#
# }
plotHistogramPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
#shape <- 3.914062
shape <- 4
mode <- ((shape + 2)*mean(sample) - min - max)/shape
#Plot
x <- seq( from = min, to = max, by = 0.001)
desc <- paste("PERT(", round(min, 3), ", ", round(mode, 3), ", ", round(max, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dpert(x, min = min, mode = mode, max = max), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotQQPlotBeta <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
}
plotQQPlotPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mode <- (6*mean(sample) - min - max)/4
params <- list(min = min, mode = mode, max = max)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qpert, dparams = params) +
stat_qq_line(distribution = qpert, dparams = params)
}
ksTestBeta <- function(scatterer, dim, filter = FALSE){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
return( ks.test(sample, "pbeta", shape1 = alpha, shape2 = beta))
}
dim <- c(90, 65, 1, 30)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("random volume", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
plotHistogramBeta("trihedral", dim, filter = TRUE)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
#KS-TEST => TRIHEDRAL (FILTERED)
#1TH SAMPLE -> SIZE = 1248
#Beta(3.557, 13.51)
#p-value = 0.8225
#2TH SAMPLE -> SIZE = 702
#Beta(4.578, 15.066)
#p-value = 0.9029
#3TH SAMPLE -> SIZE = 452
#Beta(3.594, 10.814)
#p-value = 0.4585
#4TH SAMPLE -> SIZE = 613
#Beta(4.291, 12.99)
#p-value = 0.6279
#5TH SAMPLE -> SIZE = 488
#Beta(4.192, 11.54)
#p-value = 0.5695
#1TH SAMPLE -> SIZE = 161
#Beta(9.937, 20.475)
#p-value = 0.65
#2TH SAMPLE -> SIZE = 357
#Beta(8.006, 16.477)
#p-value = 0.1972
#3TH SAMPLE -> SIZE = 703
#Beta(6.062, 11.269)
#p-value = 0.1351
#4TH SAMPLE -> SIZE = 663
#Beta(5.527, 9.914)
#p-value = 0.008015
#5TH SAMPLE -> SIZE = 774
#Beta(5.849, 10.203)
#p-value = 0.5925
tri_alpha <- data.frame(
X = 1:5,
SB231 = c(3.557, 4.578, 3.594, 4.291, 4.192), #SOYBEANS 231
SB232 = c(3.039, 4.752, 4.553, 4.217, 4.02), #SOYBEANS 232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB231 = c(13.51, 15.066, 10.814, 12.99, 11.54), #SOYBEANS 231
SB232 = c(11.602, 15.506, 13.68, 12.532, 11.28), #SOYBEANS 232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
tri_mean <- tri_alpha / (tri_alpha + tri_beta)
tri_mean$X <- 1:5
rv_alpha <- data.frame(
X = 1:5,
SB231 = c(9.937, 8.006, 6.062, 5.527, 5.849), #SOYBEANS 231
SB232 = c(9.334, 8.654, 5.902, 5.891, 6.582), #SOYBEANS 231-232
CN43 = c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
WT255 = c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- data.frame(
X = 1:5,
SB231 = c(20.475, 16.477, 11.269, 9.914, 10.203), #SOYBEANS 231
SB232 = c(18.516, 17.722, 10.969, 10.621, 11.241), #SOYBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
rv_mean <- rv_alpha / (rv_alpha + rv_beta)
rv_mean$X <- 1:5
library(ggplot2)
#Analysis per sample
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_mean, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_mean, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
read_file <- function(file, nrow, ncol){
return(matrix(
readBin(file, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE) )
}
nrow <- 615
ncol <- 445
hhhh_file <- file("HHHH.gri", "rb")
hhhh <- read_file(hhhh_file, nrow = nrow, ncol = ncol)
hvhv_file <- file("HVHV.gri", "rb")
hvhv <- read_file(hvhv_file, nrow = nrow, ncol = ncol)
vvvv_file <- file("VVVV.gri", "rb")
vvvv <- read_file(vvvv_file, nrow = nrow, ncol = ncol)
matrix <- array(0, dim = c(nrow, ncol, 3))
matrix[,,1] <- ecdf(hhhh)(hhhh)
matrix[,,2] <- ecdf(hvhv)(hvhv)
matrix[,,3] <- ecdf(vvvv)(vvvv)
library("png")
writePNG(matrix[90:155, 100:300,], target = "region3_soybeans_101.png")
writePNG(matrix[20:155, 200:440,], target = "region3_soybeans_101.png")
writePNG(matrix[20:155, 1:440,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 200:440,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 300:440,], target = "region3_soybeans_101.png")
2
writePNG(matrix[20:175, 200:440,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 200:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 2:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 300:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 350:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 300:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 350:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 360:400,], target = "region3_soybeans_101.png")
writePNG(matrix[20:175, 360:390,], target = "region3_soybeans_101.png")
writePNG(matrix[110:175, 360:390,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 360:390,], target = "region3_soybeans_101.png")
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
dim <- c(115, 65, 360, 30) #Sample 101
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
plotScattererMap(dim)
ksTestBeta("trihedral", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
mean(data)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
mean(data)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
plotScattererMap(dim)
ksTestBeta("trihedral", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
plotHistogramBeta("trihedral", dim, filter = TRUE)
writePNG(matrix[115:180, 360:410,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 360:450,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 300:400,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 300:390,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 300:400,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 300:390,], target = "region3_soybeans_101.png")
writePNG(matrix[105:180, 300:390,], target = "region3_soybeans_101.png")
writePNG(matrix[105:180, 360:390,], target = "region3_soybeans_101.png")
writePNG(matrix[115:180, 360:390,], target = "region3_soybeans_101.png")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
#1TH SAMPLE -> SIZE = 1481
#Beta(2.331, 10.086)
#p-value = 0.06498
#2TH SAMPLE -> SIZE = 867
#Beta(3.95, 13.849)
#p-value = 0.9471
#3TH SAMPLE -> SIZE = 429
#Beta(3.81, 11.209)
#p-value = 0.05863
#4TH SAMPLE -> SIZE = 397
#Beta(4.314, 12.227)
#p-value = 0.452
#5TH SAMPLE -> SIZE = 319
#Beta(4.798, 13.957)
#p-value = 0.4009
#1TH SAMPLE -> SIZE = 71
#Beta(5.987, 10.993)
#p-value = 0.517
#2TH SAMPLE -> SIZE = 306
#Beta(7.662, 15.978)
#p-value = 0.7577
#3TH SAMPLE -> SIZE = 633
#Beta(5.75, 11.792)
#p-value = 0.4949
#4TH SAMPLE -> SIZE = 743
#Beta(5.473, 10.794)
#p-value = 0.1091
#5TH SAMPLE -> SIZE = 829
#Beta(5.191, 9.438)
#p-value = 0.1443
tri_alpha <- data.frame(
X = 1:5,
SB101 = c(2.331, 3.95, 3.81, 4.314, 4.798), #SOYBEANS 101
SB231 = c(3.557, 4.578, 3.594, 4.291, 4.192), #SOYBEANS 231
SB232 = c(3.039, 4.752, 4.553, 4.217, 4.02), #SOYBEANS 232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB101 = c(10.086, 13.849, 11.209, 12.227, 13.957), #SOYBEANS 101
SB231 = c(13.51, 15.066, 10.814, 12.99, 11.54), #SOYBEANS 231
SB232 = c(11.602, 15.506, 13.68, 12.532, 11.28), #SOYBEANS 232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
tri_mean <- tri_alpha / (tri_alpha + tri_beta)
tri_mean$X <- 1:5
rv_alpha <- data.frame(
X = 1:5,
SB101 = c(5.987, 7.662, 5.75, 5.473, 5.191), #SOYBEANS 101
SB231 = c(9.937, 8.006, 6.062, 5.527, 5.849), #SOYBEANS 231
SB232 = c(9.334, 8.654, 5.902, 5.891, 6.582), #SOYBEANS 231-232
CN43 = c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
WT255 = c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- data.frame(
X = 1:5,
SB101 = c(10.993, 15.978, 11.792, 10.794, 9.438)
SB231 = c(20.475, 16.477, 11.269, 9.914, 10.203), #SOYBEANS 231
SB232 = c(18.516, 17.722, 10.969, 10.621, 11.241), #SOYBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
rv_mean <- rv_alpha / (rv_alpha + rv_beta)
rv_mean$X <- 1:5
tri_alpha <- data.frame(
X = 1:5,
SB101 = c(2.331, 3.95, 3.81, 4.314, 4.798), #SOYBEANS 101
SB231 = c(3.557, 4.578, 3.594, 4.291, 4.192), #SOYBEANS 231
SB232 = c(3.039, 4.752, 4.553, 4.217, 4.02), #SOYBEANS 232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB101 = c(10.086, 13.849, 11.209, 12.227, 13.957), #SOYBEANS 101
SB231 = c(13.51, 15.066, 10.814, 12.99, 11.54), #SOYBEANS 231
SB232 = c(11.602, 15.506, 13.68, 12.532, 11.28), #SOYBEANS 232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
tri_mean <- tri_alpha / (tri_alpha + tri_beta)
tri_mean$X <- 1:5
rv_alpha <- data.frame(
X = 1:5,
SB101 = c(5.987, 7.662, 5.75, 5.473, 5.191), #SOYBEANS 101
SB231 = c(9.937, 8.006, 6.062, 5.527, 5.849), #SOYBEANS 231
SB232 = c(9.334, 8.654, 5.902, 5.891, 6.582), #SOYBEANS 231-232
CN43 = c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
WT255 = c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- data.frame(
X = 1:5,
SB101 = c(10.993, 15.978, 11.792, 10.794, 9.438), #SOYBEANS 101
SB231 = c(20.475, 16.477, 11.269, 9.914, 10.203), #SOYBEANS 231
SB232 = c(18.516, 17.722, 10.969, 10.621, 11.241), #SOYBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
rv_mean <- rv_alpha / (rv_alpha + rv_beta)
rv_mean$X <- 1:5
#Analysis per sample
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_mean, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(rv_mean, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
