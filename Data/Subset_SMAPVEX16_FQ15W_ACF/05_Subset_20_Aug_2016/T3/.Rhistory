logit <- logit(sample)
mean <- mean( logit )
sd <- sd(logit)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("LN(", round(mean, 3), ", ", round(sd, 3), "Â²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dlogitnorm(x, mu = mean, sigma = sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
# dpert <- function(x, min, mode, max){
#
#   alpha <- (4*mode + max - 5*min)/(max - min)
#   beta <- (5*max - min - 4*mode)/(max - min)
#   return( ( (x - min)^(alpha - 1) * (max - x)^(beta - 1) ) / ( beta(alpha, beta) * (max - min) ^ (alpha + beta - 1) ) )
#
# }
plotHistogramPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
#shape <- 3.914062
shape <- 4
mode <- ((shape + 2)*mean(sample) - min - max)/shape
#Plot
x <- seq( from = min, to = max, by = 0.001)
desc <- paste("PERT(", round(min, 3), ", ", round(mode, 3), ", ", round(max, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dpert(x, min = min, mode = mode, max = max), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotQQPlotBeta <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
}
plotQQPlotPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mode <- (6*mean(sample) - min - max)/4
params <- list(min = min, mode = mode, max = max)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qpert, dparams = params) +
stat_qq_line(distribution = qpert, dparams = params)
}
ksTestBeta <- function(scatterer, dim, filter = FALSE){
sample <- c(0)
if(filter){
sample <- getFilteredData(scatterer, dim)
} else {
sample <- getGeoDist(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
return( ks.test(sample, "pbeta", shape1 = alpha, shape2 = beta))
}
alpha_gd <- function(dim, filter  = FALSE){
data = c()
if(filter){
data = getFilteredData("trihedral" , dim)
} else {
data = getGeoDist("trihedral", dim)
}
return(90*data)
}
helicity_gd <- function(dim, filter = FALSE){
data = c()
if(filter){
data = 1 - sqrt( getFilteredData("left helix" , dim) * getFilteredData("right helix" , dim) )
} else {
data = 1 - sqrt( getGeoDist("left helix", dim) * getGeoDist("right helix", dim) )
}
return(45*data)
}
purity_gd <- function(dim, filter = TRUE){
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
data <- (hhhh + hvhv + vvvv) / 2
data <- ( 1.5 * data )^2
return(data)
}
for(i in 1:5){
setwd(wd[i])
sample[,,i] <- purity_gd(dim)
}
# Build dataset with different distributions
data <- data.frame(
day = c( rep("0", 1950), rep("24", 1950), rep("48", 1950), rep("72", 1950), rep("96", 1950) ),
value = c( c(sample[,,1]), c(sample[,,2]), c(sample[,,3]), c(sample[,,4]), c(sample[,,5]) )
)
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
devtools::install_github('r-lib/systemfonts')
devtools::install_github('r-lib/systemfonts')
install.packages("systemfonts")
install.packages("hrbrthames")
install.packages("hrbrthemes")
install.packages("gdtools")
install.packages("gdtools", type = "source")
devtools::install_github('/davidgohel/gdtools')
devtools::install_github('davidgohel/gdtools')
install.packages("gdtools")
install.packages("gdtools")
install.packages("hrbrthemes")
library(hrbrthemes)
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
shapiro.test(log10(df.sample$t1))
df.sample <- data.frame(t1=as.vector(sample[,,1]),
t2=as.vector(sample[,,2]),
t3=as.vector(sample[,,3]),
t4=as.vector(sample[,,4]),
t5=as.vector(sample[,,5]))
shapiro.test(log10(df.sample$t1))
shapiro.test(log10(df.sample$t2))
shapiro.test(log10(df.sample$t3))
shapiro.test(log10(df.sample$t4))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() + labs(fill = "Day")+
theme(text=element_text(family="Times New Roman", size=20))
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
#labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() + labs(fill = "Day") +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() + labs(fill = "Day")
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() + labs(fill = "Day") +
theme(text=element_text(family="Times New Roman", size=20))
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() + labs(fill="Day") +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
labs(fill="Day") +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=color)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=colors)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_fill_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, fill=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_fill_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, fill=day)) +
stat_qq_line(aes(sample=log10(value), group=day, fill=day)) +
scale_fill_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, fill=day)) +
scale_fill_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(fill="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, fill=day)) +
scale_fill_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_col_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
colors <- c("red", "orange", "yellow", "greenyellow", "green4")
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/5) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/2) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/5) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/3) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum() + xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
nclass.FD(data$value)
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(axis.title = text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20), axis.title = element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20), axis.text = element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(axis.text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(axis.text.x=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
#theme_ipsum() +
theme(axis.text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
#theme_ipsum() +
theme(axis.title=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
#theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum() +
theme(text=element_text(family="Times New Roman", size=20))
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum(base_family = "Times New Roman", base_size = 20)
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum(base_family = "Times New Roman", base_size = 20, axis_title_size = 20)
shapiro.test(log10(df.sample$t1))
shapiro.test(ln(df.sample$t1))
ln(exp)
shapiro.test(log(df.sample$t1))
shapiro.test(log(df.sample$t2))
shapiro.test(log(df.sample$t3))
shapiro.test(log(df.sample$t4))
shapiro.test(log(df.sample$t5))
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum(base_family = "Times New Roman", base_size = 20, axis_title_size = 20)+
xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum(base_family = "Times New Roman", base_size = 20, axis_title_size = 20)
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum(base_family = "Times New Roman", base_size = 30, axis_title_size = 30)+
xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
# Represent it
ggplot(data = data) +
geom_histogram(aes(x=value, y = ..density.., fill=day, group = day), color="#e9ecef",
alpha=0.5, position = 'identity', bins=nclass.FD(data$value)/4) +
scale_fill_manual(values=colors) +
theme_ipsum(base_family = "Times New Roman", base_size = 35, axis_title_size = 35)+
xlab("Purity [log10]") + ylab("Density") +
geom_boxploth(aes(x=value, y=day, fill=day, group=day), notch=TRUE, width=.2, outlier.size = .5) +
labs(fill="Day") +
scale_x_continuous(trans="log10")
ggplot(data) +
geom_qq(aes(sample=log10(value), group=day, col=day)) +
stat_qq_line(aes(sample=log10(value), group=day, col=day)) +
scale_color_manual(values=colors) +
xlab("Theoretical Quantiles") + ylab("Purity [log10]") + labs(col="Day") +
theme_ipsum(base_family = "Times New Roman", base_size = 35, axis_title_size = 35)
shapiro.test(log10(df.sample$t1))
shapiro.test(log10(df.sample$t2))
shapiro.test(log10(df.sample$t3))
shapiro.test(log10(df.sample$t4))
shapiro.test(log10(df.sample$t5))
