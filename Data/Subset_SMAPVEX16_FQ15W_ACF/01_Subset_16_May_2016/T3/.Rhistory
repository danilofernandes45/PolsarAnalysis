#2
tree = rpart(class ~ trihedral + `right helix` + `left helix`, data = data_train, method = "class")
rpart.plot(tree)
table(predict(tree, data_test), data_test$class)
#2
tree = rpart(class ~ ., data = data_train, method = "class")
rpart.plot(tree)
table(predict(tree, data_test), data_test$class)
preditions <- predict(tree, data_test)
predictions
table(predict(tree, data_test), data_test$class)
predict(tree, data_test)
preditions <- predict(tree, data_test)
predictions
data_train
data <- data[-which(data$class != 1 & data$class != 5),]
data$class <- as.factor(data$class)
set.seed(2111)
train_indices <- sample(1:nrow(data), 2*nrow(data)%/%3)
data_train <- data[train_indices, ]
data_test <- data[-train_indices, ]
#2
tree = rpart(class ~ ., data = data_train, method = "class")
rpart.plot(tree)
data$class <- as.numeric(data$class)
#2
tree = rpart(class ~ ., data = data_train, method = "class")
data <- data[-which(data$class != 1 & data$class != 5),]
set.seed(2111)
train_indices <- sample(1:nrow(data), 2*nrow(data)%/%3)
data_train <- data[train_indices, ]
data_test <- data[-train_indices, ]
#2
tree = rpart(class ~ ., data = data_train, method = "class")
wd <- c(
"~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3",
"~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3",
"~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3",
"~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3",
"~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3"
)
dim1 <- c(90, 65, 5, 30) #Sample 231
scatterers <- c("-1/4-wave", "+1/4-wave", "cylinder", "dihedral", "dipole", "left helix",
"narrow dihedral", "random volume", "right helix", "trihedral")
sample <- 1:5
data <- data.frame(0,0,0,0,0,0,0,0,0,0,0)
names(data) <- c(scatterers, "class")
tmp <- array(0, dim = c(1950, 11))
for(j in 1:5){
setwd(wd[j])
for(k in 1:10){
tmp[,k] <- c(getGeoDist(scatterers[k], dim1))
}
tmp[,11] <- sample[j]
tmp_data <- data.frame(tmp)
names(tmp_data) <- c(scatterers, "class")
data <- rbind(data, tmp_data)
}
data <- data[-1,]
data$class <- as.factor(data$class)
library(party)
data <- data[-which(data$class != 1 & data$class != 5),]
set.seed(2111)
train_indices <- sample(1:nrow(data), 2*nrow(data)%/%3)
data_train <- data[train_indices, ]
data_test <- data[-train_indices, ]
#2
tree = rpart(class ~ ., data = data_train, method = "class")
rpart.plot(tree)
predict(tree, data_test)
predictions <- array(0, nrow(data_test))
predict(tree, data_test)[,1]
which(predict(tree, data_test)[,1] >= predict(tree, data_test)[,5])
preditions[ which(predict(tree, data_test)[,1] >= predict(tree, data_test)[,5]) ] <- 1
predictions
which(predict(tree, data_test)[,1] >= predict(tree, data_test)[,5])
data_test
head(data_test)
rownames(data_test) <- NULL
head(data_test)
rownames(data_train) <- NULL
rownames(data_test) <- NULL
#2
tree = rpart(class ~ ., data = data_train, method = "class")
rpart.plot(tree)
predictions <- array(0, nrow(data_test))
which(predict(tree, data_test)[,1] >= predict(tree, data_test)[,5])
preditions[ which(predict(tree, data_test)[,1] >= predict(tree, data_test)[,5]) ] <- 1
predictions <- array(1, nrow(data_test))
preditions[ which(predict(tree, data_test)[,1] < predict(tree, data_test)[,5]) ] <- 5
table(predictions, data_test$class)
predictions <- array(1, nrow(data_test))
predictions[ which(predict(tree, data_test)[,1] < predict(tree, data_test)[,5]) ] <- 5
table(predictions, data_test$class)
#1
tree = ctree(class ~ ., data = data_train)
plot(tree, main="Conditional Inference Tree for Data")
table(predict(tree, data_test), data_test$class)
plotHistogramBeta("left helix", dim1)
setwd(wd[1])
plotHistogramBeta("left helix", dim1)
setwd(wd[5])
plotHistogramBeta("left helix", dim1)
ksTestBeta("left helix", dim1)
setwd(wd[1])
ksTestBeta("left helix", dim1)
ggplot() +
geom_histogram(aes(x = c(sample1), y = ..density..), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample2), y = ..density..), bins = 45)
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
scatterer <- "left helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample1), y = ..density..), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample2), y = ..density..), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample1), y = ..density.., color = "red"), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample2), y = ..density..), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red"), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green"), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green"), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red"), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green", alpha = .2), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red", alpha = .2), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green", alpha = .5), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red", alpha = .5), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green", alpha = .7), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red", alpha = .7), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green", alpha = 1), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red", alpha = 1), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density.., fill = "green", alpha = 0.3), bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density.., fill = "red", alpha = 0.3), bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.3, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.3, bins = 45)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "right helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "trihedral"
setwd(wd[1])
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "trihedral"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1, filter = TRUE)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1, filter = TRUE)
scatterer <- "trihedral"
setwd(wd[1])
sample1 <- getFilteredData(scatterer, dim1)
setwd(wd[2])
sample2 <- getFilteredData(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "trihedral"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "left helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "random volume"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "left helix"
scatterer <- "left helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
dist_trihedral <- (2/pi)*acos( hhhh / mod_kennaugh )
dist_dihedral  <- (2/pi)*acos( hvhv / mod_kennaugh )
dist_rand_vol  <- (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
dist_narrow_dihedral <- (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
dist_cylinder <- (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
dist_dipole <- (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
dist_left_helix <- (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_right_helix <- (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_pos_wave <- (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
dist_neg_wave <- (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
min <- pmin(dist_trihedral, dist_dihedral, dist_rand_vol, dist_narrow_dihedral,
dist_cylinder, dist_dipole, dist_left_helix, dist_right_helix,
dist_pos_wave, dist_neg_wave, na.rm = TRUE)
dim <- dim1
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
dist_trihedral <- (2/pi)*acos( hhhh / mod_kennaugh )
dist_dihedral  <- (2/pi)*acos( hvhv / mod_kennaugh )
dist_rand_vol  <- (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
dist_narrow_dihedral <- (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
dist_cylinder <- (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
dist_dipole <- (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
dist_left_helix <- (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_right_helix <- (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_pos_wave <- (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
dist_neg_wave <- (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
min <- pmin(dist_trihedral, dist_dihedral, dist_rand_vol, dist_narrow_dihedral,
dist_cylinder, dist_dipole, dist_left_helix, dist_right_helix,
dist_pos_wave, dist_neg_wave, na.rm = TRUE)
setwd(wd[1])
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
dist_trihedral <- (2/pi)*acos( hhhh / mod_kennaugh )
dist_dihedral  <- (2/pi)*acos( hvhv / mod_kennaugh )
dist_rand_vol  <- (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
dist_narrow_dihedral <- (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
dist_cylinder <- (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
dist_dipole <- (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
dist_left_helix <- (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_right_helix <- (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_pos_wave <- (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
dist_neg_wave <- (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
min <- pmin(dist_trihedral, dist_dihedral, dist_rand_vol, dist_narrow_dihedral,
dist_cylinder, dist_dipole, dist_left_helix, dist_right_helix,
dist_pos_wave, dist_neg_wave, na.rm = TRUE)
sample1 <- dist_left_helix[ which(dist_trihedral == min) ]
setwd(wd[5])
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
dist_trihedral <- (2/pi)*acos( hhhh / mod_kennaugh )
dist_dihedral  <- (2/pi)*acos( hvhv / mod_kennaugh )
dist_rand_vol  <- (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
dist_narrow_dihedral <- (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
dist_cylinder <- (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
dist_dipole <- (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
dist_left_helix <- (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_right_helix <- (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_pos_wave <- (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
dist_neg_wave <- (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
min <- pmin(dist_trihedral, dist_dihedral, dist_rand_vol, dist_narrow_dihedral,
dist_cylinder, dist_dipole, dist_left_helix, dist_right_helix,
dist_pos_wave, dist_neg_wave, na.rm = TRUE)
sample2 <- dist_left_helix[ which(dist_trihedral == min) ]
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
plotQQPlotBeta("left helix", dim1)
dim1
sample <- getSimilarity(scatterer, dim)
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
sample
qbeta
alpha
beta
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
library(reshape2)
library(ggplot2)
library(stats4)
library(raster)
library(logitnorm)
data.frame(sample)
sample <- getGeoDist(scatterer, dim)
sample <- getGeoDist(scatterer, dim)
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
sample <- c(getGeoDist(scatterer, dim))
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
plotQQPlotBeta("left helix", dim1)
plotQQPlotBeta <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- c(getGeoDist(scatterer, dim))
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
}
plotQQPlotBeta("left helix", dim1)
scatterer <- "left helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[2])
sample2 <- getGeoDist(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "left helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[5])
sample2 <- getGeoDist(scatterer, dim1)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "trihedral"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[5])
sample2 <- getGeoDist(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "trihedral"
setwd(wd[1])
sample1 <- getFilteredData(scatterer, dim1)
setwd(wd[5])
sample2 <- getFilteredData(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
scatterer <- "left helix"
setwd(wd[1])
sample1 <- getGeoDist(scatterer, dim1)
setwd(wd[5])
sample2 <- getGeoDist(scatterer, dim1)
# #Estimative of Beta parameters
# mean <- mean(sample)
# var <- sd(sample) ^ 2
# alpha <- mean * ( mean * (1 - mean) / var - 1 )
# beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#
# #Plot
# x <- seq( from = range[1], to = range[2], by = 0.001)
# desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
plotQQPlotBeta("left helix", dim1)
1 - ecdf(sample1)(0.9)
ecdf(sample2)(0.9)
setwd(wd[1])
plotQQPlotBeta("left helix", dim1)
ecdf(sample1)(0.9)
ggplot() +
geom_histogram(aes(x = c(sample2), y = ..density..), fill = "green", alpha = 0.5, bins = 45) + xlab("x") +
geom_histogram(aes(x = c(sample1), y = ..density..), fill = "red", alpha = 0.5, bins = 45)
ecdf(sample1)(0.9)
ecdf(sample2)(0.9)
1 - ecdf(sample2)(0.9)
ecdf(sample1)(0.9)
