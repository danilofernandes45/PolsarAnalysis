dist_cylinder, dist_dipole, dist_left_helix, dist_right_helix,
dist_pos_wave, dist_neg_wave, na.rm = TRUE)
if(scatterer == "-1/4-wave"){
return ( dist_neg_wave[ which(dist_neg_wave == min) ] )
}
else if(scatterer == "+1/4-wave"){
return ( dist_pos_wave[ which(dist_pos_wave == min) ] )
}
else if(scatterer == "cylinder"){
return ( dist_cylinder[ which(dist_cylinder == min) ] )
}
else if(scatterer == "dihedral"){
return ( dist_dihedral[ which(dist_dihedral == min) ] )
}
else if(scatterer == "narrow dihedral"){
return ( dist_narrow_dihedral[ which(dist_narrow_dihedral == min) ] )
}
else if(scatterer == "dipole"){
return ( dist_dipole[ which(dist_dipole == min) ] )
}
else if(scatterer == "left helix"){
return ( dist_left_helix[ which(dist_left_helix == min) ] )
}
else if(scatterer == "right helix"){
return ( dist_right_helix[ which(dist_right_helix == min) ] )
}
else if(scatterer == "random volume"){
return ( dist_rand_vol[ which(dist_rand_vol == min) ] )
}
else if(scatterer == "trihedral"){
return ( dist_trihedral[ which(dist_trihedral == min) ] )
}
return( c(0) )
}
plotScattererMap <- function(dim, title = ""){
my_colours <- c("-1/4-wave" = "yellow", "+1/4-wave" = "orange", "Cylinder" = "red", "Dihedral" = "blue", "Dipole" = "navy",
"Left helix" = "peru", "NA" = "snow", "Narrow dihedral" = "greenyellow", "Random volume" = "green3",
"Right helix" = "purple", "Trihedral" = "magenta")
sample <- getMapMatrix(dim)
data_frame <- data.frame(melt(sample))
data_frame[1] <- data_frame[1] + dim[1]
data_frame[2] <- data_frame[2] + dim[3]
ggplot(data = data_frame, aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_manual(values = my_colours) + xlab("column") + ylab("row") +
ggtitle(title) +
theme(plot.title = element_text(hjust = 0.5))
}
plotHeatmap <- function(scatterer, dim, title = ""){
similarities <- getSimilarity(scatterer, dim)
ggplot( data = data.frame(melt(similarities)), aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_gradient() + ylab("row") + xlab("column") +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramBeta <- function(scatterer, dim, filter = FALSE, title = "", range = c(0, 1)){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getGeoDist(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#Plot
x <- seq( from = range[1], to = range[2], by = 0.001)
desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..), bins = 45) + xlab("x") +
geom_line(aes(x = x, y = dbeta(x, alpha, beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramNorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("N(", round(mean, 3), ", ", round(sd, 3), "²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dnorm(x, mean, sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramGamma <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
alpha <- mean ^2 / sd ^2
beta <- sd^2 / mean
#Plot
x <- seq( from = 0, to = 0.2, by = 0.001)
desc <- paste("Gamma(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dgamma(x, shape = alpha, scale = beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
logit <- function(x){
return( log(x) / log(1-x) )
}
plotHistogramLogitnorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
logit <- logit(sample)
mean <- mean( logit )
sd <- sd(logit)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("LN(", round(mean, 3), ", ", round(sd, 3), "²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dlogitnorm(x, mu = mean, sigma = sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
# dpert <- function(x, min, mode, max){
#
#   alpha <- (4*mode + max - 5*min)/(max - min)
#   beta <- (5*max - min - 4*mode)/(max - min)
#   return( ( (x - min)^(alpha - 1) * (max - x)^(beta - 1) ) / ( beta(alpha, beta) * (max - min) ^ (alpha + beta - 1) ) )
#
# }
plotHistogramPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
#shape <- 3.914062
shape <- 4
mode <- ((shape + 2)*mean(sample) - min - max)/shape
#Plot
x <- seq( from = min, to = max, by = 0.001)
desc <- paste("PERT(", round(min, 3), ", ", round(mode, 3), ", ", round(max, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dpert(x, min = min, mode = mode, max = max), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotQQPlotBeta <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
}
plotQQPlotPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mode <- (6*mean(sample) - min - max)/4
params <- list(min = min, mode = mode, max = max)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qpert, dparams = params) +
stat_qq_line(distribution = qpert, dparams = params)
}
ksTestBeta <- function(scatterer, dim, filter = FALSE){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
return( ks.test(sample, "pbeta", shape1 = alpha, shape2 = beta))
}
plotScattererMap(dim1)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
dim2
dim1
dim2 <- c(500, 65, 315, 35)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
library("png")
read_file <- function(file, nrow, ncol){
return(matrix(
readBin(file, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE) )
}
nrow <- 615
ncol <- 445
hhhh_file <- file("HHHH.gri", "rb")
hhhh <- read_file(hhhh_file, nrow = nrow, ncol = ncol)
hvhv_file <- file("HVHV.gri", "rb")
hvhv <- read_file(hvhv_file, nrow = nrow, ncol = ncol)
vvvv_file <- file("VVVV.gri", "rb")
vvvv <- read_file(vvvv_file, nrow = nrow, ncol = ncol)
matrix <- array(0, dim = c(nrow, ncol, 3))
matrix[,,1] <- ecdf(hhhh)(hhhh)
matrix[,,2] <- ecdf(hvhv)(hvhv)
matrix[,,3] <- ecdf(vvvv)(vvvv)
dim2
writePNG(matrix[425:490, 315:350,], target = "region2_wheat_105.png")
plotScattererMap(dim2)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
plotScattererMap(dim1)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
plotScattererMap(dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
plotScattererMap(dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
plotScattererMap(dim1)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
plotScattererMap(dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(420, 65, 260, 35) #Sample
dim2 <- c(490, 55, 250, 35) #Sample
plotScattererMap(dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
dim2
dim1
dim2 <- c(490, 55, 255, 35)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
dim2 <- c(490, 55, 260, 35)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
writePNG(matrix[490:555, 260:285,], target = "region1_oats_103.png")
dim2
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
plotScattererMap(dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotScattererMap(dim1)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
data <- getFilteredData("trihedral", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("random volume", dim1, filter = TRUE)
plotScattererMap(dim2)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
data <- getFilteredData("random volume", dim2)
ksTestBeta("random volume", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
dim1
dim2
dim1 <- c(420, 65, 255, 35)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(420, 65, 250, 35)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(420, 65, 265, 35)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(425, 65, 250, 35)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(415, 65, 250, 35)
ksTestBeta("random volume", dim1, filter = TRUE)
data <- getFilteredData("random volume", dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
dim1
writePNG(matrix[415:480, 250:285,], target = "region2_oats_102.png")
writePNG(matrix[415:480, 260:295,], target = "region2_oats_102.png")
writePNG(matrix[415:480, 260:295,], target = "region2_oats_102.png")
writePNG(matrix[490:555, 260:295,], target = "region1_oats_103.png")
dim1
dim1 <- c(415, 65, 260, 35)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
dim2
data <- getFilteredData("trihedral", dim1)
data <- getFilteredData("trihedral", dim2)
ksTestBeta("trihedral", dim2, filter = TRUE)
ksTestBeta("random volume", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
plotScattererMap(dim1)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
dim2
dim2 <- c(490, 55, 255, 35)
ksTestBeta("trihedral", dim1, filter = TRUE)
dim1
dim1 <- c(415, 65, 255, 35)
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
dim2 <- c(490, 55, 260, 35) #Sample
plotHistogramBeta("trihedral", dim2, filter = TRUE)
plotHistogramBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("random volume", dim2, filter = TRUE)
dim1
dim2
dim1 <- c(420, 65, 255, 35) #Sample
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
dim1 <- c(415, 65, 260, 35) #Sample
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim1, filter = TRUE)
plotHistogramBeta("trihedral", dim2, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
ksTestBeta("trihedral", dim1, filter = TRUE)
ksTestBeta("random volume", dim1, filter = TRUE)
