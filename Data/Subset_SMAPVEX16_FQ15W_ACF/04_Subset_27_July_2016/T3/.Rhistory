dist_rand_vol  <- (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
dist_narrow_dihedral <- (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
dist_cylinder <- (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
dist_dipole <- (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
dist_left_helix <- (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_right_helix <- (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
dist_pos_wave <- (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
dist_neg_wave <- (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
min <- pmin(dist_trihedral, dist_dihedral, dist_rand_vol, dist_narrow_dihedral,
dist_cylinder, dist_dipole, dist_left_helix, dist_right_helix,
dist_pos_wave, dist_neg_wave, na.rm = TRUE)
if(scatterer == "-1/4-wave"){
return ( dist_neg_wave[ which(dist_neg_wave == min) ] )
}
else if(scatterer == "+1/4-wave"){
return ( dist_pos_wave[ which(dist_pos_wave == min) ] )
}
else if(scatterer == "cylinder"){
return ( dist_cylinder[ which(dist_cylinder == min) ] )
}
else if(scatterer == "dihedral"){
return ( dist_dihedral[ which(dist_dihedral == min) ] )
}
else if(scatterer == "narrow dihedral"){
return ( dist_narrow_dihedral[ which(dist_narrow_dihedral == min) ] )
}
else if(scatterer == "dipole"){
return ( dist_dipole[ which(dist_dipole == min) ] )
}
else if(scatterer == "left helix"){
return ( dist_left_helix[ which(dist_left_helix == min) ] )
}
else if(scatterer == "right helix"){
return ( dist_right_helix[ which(dist_right_helix == min) ] )
}
else if(scatterer == "random volume"){
return ( dist_rand_vol[ which(dist_rand_vol == min) ] )
}
else if(scatterer == "trihedral"){
return ( dist_trihedral[ which(dist_trihedral == min) ] )
}
return( c(0) )
}
plotScattererMap <- function(dim, title = ""){
my_colours <- c("-1/4-wave" = "yellow", "+1/4-wave" = "orange", "Cylinder" = "red", "Dihedral" = "blue", "Dipole" = "navy",
"Left helix" = "peru", "NA" = "snow", "Narrow dihedral" = "greenyellow", "Random volume" = "green3",
"Right helix" = "purple", "Trihedral" = "magenta")
sample <- getMapMatrix(dim)
data_frame <- data.frame(melt(sample))
data_frame[1] <- data_frame[1] + dim[1]
data_frame[2] <- data_frame[2] + dim[3]
ggplot(data = data_frame, aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_manual(values = my_colours) + xlab("column") + ylab("row") +
ggtitle(title) +
theme(plot.title = element_text(hjust = 0.5))
}
plotHeatmap <- function(scatterer, dim, title = ""){
similarities <- getSimilarity(scatterer, dim)
ggplot( data = data.frame(melt(similarities)), aes(x = Var2, y = Var1, fill = value)) +
geom_tile() + scale_fill_gradient() + ylab("row") + xlab("column") +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramBeta <- function(scatterer, dim, filter = FALSE, title = "", range = c(0, 1)){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getGeoDist(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
#Plot
x <- seq( from = range[1], to = range[2], by = 0.001)
desc <- paste("Beta(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..), bins = 45) + xlab("x") +
geom_line(aes(x = x, y = dbeta(x, alpha, beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramNorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("N(", round(mean, 3), ", ", round(sd, 3), "Â²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dnorm(x, mean, sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotHistogramGamma <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
mean <- mean(sample)
sd <- sd(sample)
alpha <- mean ^2 / sd ^2
beta <- sd^2 / mean
#Plot
x <- seq( from = 0, to = 0.2, by = 0.001)
desc <- paste("Gamma(", round(alpha, 3), ", ", round(beta, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dgamma(x, shape = alpha, scale = beta), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
logit <- function(x){
return( log(x) / log(1-x) )
}
plotHistogramLogitnorm <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
logit <- logit(sample)
mean <- mean( logit )
sd <- sd(logit)
#Plot
x <- seq( from = 0, to = 1, by = 0.001)
desc <- paste("LN(", round(mean, 3), ", ", round(sd, 3), "Â²)", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dlogitnorm(x, mu = mean, sigma = sd), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
# dpert <- function(x, min, mode, max){
#
#   alpha <- (4*mode + max - 5*min)/(max - min)
#   beta <- (5*max - min - 4*mode)/(max - min)
#   return( ( (x - min)^(alpha - 1) * (max - x)^(beta - 1) ) / ( beta(alpha, beta) * (max - min) ^ (alpha + beta - 1) ) )
#
# }
plotHistogramPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
#Estimative of Beta parameters
#shape <- 3.914062
shape <- 4
mode <- ((shape + 2)*mean(sample) - min - max)/shape
#Plot
x <- seq( from = min, to = max, by = 0.001)
desc <- paste("PERT(", round(min, 3), ", ", round(mode, 3), ", ", round(max, 3), ")", sep="")
ggplot() +
geom_histogram(aes(x = c(sample), y = ..density..)) + xlab("x") +
geom_line(aes(x = x, y = dpert(x, min = min, mode = mode, max = max), colour = "red"), size = 1.3) +
scale_color_discrete(name = "Parameters", labels = c(desc)) +
ggtitle(title) + theme(plot.title = element_text(hjust = 0.5))
}
plotQQPlotBeta <- function(scatterer, dim, filter = FALSE, title = ""){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
params = list(shape1 = alpha, shape2 = beta)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qbeta, dparams = params) +
stat_qq_line(distribution = qbeta, dparams = params)
}
plotQQPlotPert <- function(scatterer, dim, filter = FALSE, title = "", min, max){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mode <- (6*mean(sample) - min - max)/4
params <- list(min = min, mode = mode, max = max)
ggplot(data.frame(sample), aes(sample = sample)) +
stat_qq(distribution = qpert, dparams = params) +
stat_qq_line(distribution = qpert, dparams = params)
}
ksTestBeta <- function(scatterer, dim, filter = FALSE){
sample <- c(0)
#Get sample
if(filter){
sample <- getFilteredData(scatterer, dim)
}
else {
sample <- getSimilarity(scatterer, dim)
}
mean <- mean(sample)
var <- sd(sample) ^ 2
alpha <- mean * ( mean * (1 - mean) / var - 1 )
beta <- ( 1 - mean ) * ( mean * ( 1 - mean ) / var - 1)
return( ks.test(sample, "pbeta", shape1 = alpha, shape2 = beta))
}
dim = c(100, 55, 1, 80)
plotScattererMap(dim)
data <- getFilteredData("random volume", dim)
plotHistogramBeta("random volume", dim, filter = TRUE)
ksTestBeta("random volume", dim, filter = TRUE)
dim <- c(25, 55, 30, 50)
plotScattererMap(dim)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
dim <- c(160, 65, 245, 35)
plotScattererMap(dim)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
dim = c(100, 55, 1, 80)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
dim <- c(25, 55, 30, 50)
plotScattererMap(dim)
plotHistogramBeta("random volume", dim, filter = TRUE)
data <- getFilteredData("random volume", dim)
ksTestBeta("random volume", dim, filter = TRUE)
dim <- c(160, 65, 245, 35)
plotScattererMap(dim)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
plotScattererMap(dim)
data <- getFilteredData("trihedral", dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
ksTestBeta("trihedral", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
dim <- c(25, 55, 30, 50)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
dim <- c(25, 55, 30, 50)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
dim <- c(160, 65, 245, 35)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
data <- getFilteredData("trihedral", dim)
ksTestBeta("trihedral", dim, filter = TRUE)
x <- 1:5
library(ggplot2)
tri_alpha <- c(
c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
c(2.743, 4.385, 5.529, 5.442, 4.813) #WHEAT 255
)
tri_beta <- c(
c(11.789, 14.22, 13.332, 13.698, 12.304), #SOILBEANS 231-232
c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
c(10.169, 13.309, 14.862, 15.24, 13.007) #WHEAT 255
)
rv_alpha <- c(
c(8.343, 7.853, 5.892, 6.19, 5.999), #SOILBEANS 231-232
c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- c(
c(17.102, 15.553, 10.829, 11.269, 10.28), #SOILBEANS 231-232
c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
tri_alpha[1]
tri_alpha[1, ]
tri_alpha
tri_alpha <- array(tri_alpha, dim = c(3, 5))
tri_alpha
tri_alpha <- matrix(tri_alpha, ncol = 5, nrow = 3, byrow = TRUE)
tri_alpha
tri_beta <- matrix(tri_beta, ncol = 5, nrow = 3, byrow = TRUE)
tri_beta
tri_alpha <- c(
c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
c(2.743, 4.385, 5.529, 5.442, 4.813) #WHEAT 255
)
tri_alpha <- matrix(tri_alpha, ncol = 5, nrow = 3, byrow = TRUE)
tri_beta <- c(
c(11.789, 14.22, 13.332, 13.698, 12.304), #SOILBEANS 231-232
c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
c(10.169, 13.309, 14.862, 15.24, 13.007) #WHEAT 255
)
tri_beta <- matrix(tri_beta, ncol = 5, nrow = 3, byrow = TRUE)
rv_alpha <- c(
c(8.343, 7.853, 5.892, 6.19, 5.999), #SOILBEANS 231-232
c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_alpha <- matrix(rv_alpha, ncol = 5, nrow = 3, byrow = TRUE)
rv_beta <- c(
c(17.102, 15.553, 10.829, 11.269, 10.28), #SOILBEANS 231-232
c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
rv_beta <- matrix(rv_beta, ncol = 5, nrow = 3, byrow = TRUE)
rv_beta
tri_alpha[1,]
library(ggplot2)
ggplot() +
geom_point(aes(x = x, y = tri_alpha[1, ], colour = "red")) +
geom_point(aes(x = x, y = tri_alpha[2, ], colour = "blue")) +
geom_point(aes(x = x, y = tri_alpha[3, ], colour = "green"))
ggplot() +
geom_point(aes(x = x, y = tri_alpha[1, ], colour = "red"), size = 1.5) +
geom_point(aes(x = x, y = tri_alpha[2, ], colour = "blue")) +
geom_point(aes(x = x, y = tri_alpha[3, ], colour = "green"))
ggplot() +
geom_point(aes(x = x, y = tri_alpha[1, ], colour = "red"), size = 2) +
geom_point(aes(x = x, y = tri_alpha[2, ], colour = "blue")) +
geom_point(aes(x = x, y = tri_alpha[3, ], colour = "green"))
ggplot() +
geom_point(aes(x = x, y = tri_alpha[1, ], colour = "red"), size = 2.5) +
geom_point(aes(x = x, y = tri_alpha[2, ], colour = "blue"), size = 2.5) +
geom_point(aes(x = x, y = tri_alpha[3, ], colour = "green"), size = 2.5)
ggplot() +
geom_line(aes(x = x, y = tri_alpha[1, ], colour = "red"), size = 2.5) +
geom_point(aes(x = x, y = tri_alpha[2, ], colour = "blue"), size = 2.5) +
geom_point(aes(x = x, y = tri_alpha[3, ], colour = "green"), size = 2.5)
ggplot() +
geom_point(aes(x = x, y = tri_alpha[1, ], colour = "red"), size = 2.5) +
geom_point(aes(x = x, y = tri_alpha[2, ], colour = "blue"), size = 2.5) +
geom_point(aes(x = x, y = tri_alpha[3, ], colour = "green"), size = 2.5)
tri_alpha <- data.frame(
X = 1:5,
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.529, 5.442, 4.813) #WHEAT 255
)
tri_alpha
ggplot(aes(x = 1:5, y = value, color = variable), data = tri_alpha) +
geom_point() + geom_line()
dat = melt(subset(iris, select = c("Sepal.Length","Sepal.Width", "Species")),
id.vars = "Species")
dat
melt(tri_alpha)
tri_alpha <- data.frame(
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.529, 5.442, 4.813) #WHEAT 255
)
melt(tri_alpha)
ggplot(aes(x = 1:5, y = value, color = variable), data = melt(tri_alpha)) +
geom_point() + geom_line()
ggplot(aes(x = 1:15, y = value, color = variable), data = melt(tri_alpha)) +
geom_point() + geom_line()
ggplot(aes(x = 1:5, y = value, color = variable), data = melt(tri_alpha)) +
geom_point() + geom_line()
ggplot(aes(x = 1:5, y = value, group = variable), data = melt(tri_alpha)) +
geom_point() + geom_line()
dat1 <- data.frame(
sex = factor(c("Female","Female","Male","Male")),
time = factor(c("Lunch","Dinner","Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(13.53, 16.81, 16.24, 17.42)
)
dat1
ggplot(data=dat1, aes(x=time, y=total_bill, group=sex)) +
geom_line() +
geom_point()
melt(tri_alpha)
tri_alpha <- data.frame(
X = 1:5
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.529, 5.442, 4.813) #WHEAT 255
)
tri_alpha <- data.frame(
X = 1:5,
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.529, 5.442, 4.813) #WHEAT 255
)
melt(tri_alpha)
melt(tri_alpha, id.vars = "X")
ggplot(aes(x = 1:5, y = value, group = variable), data = melt(tri_alpha, id.vars = "X")) +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable), data = melt(tri_alpha, id.vars = "X")) +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
geom_point() + geom_line()
tri_alpha <- data.frame(
X = 1:5,
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOILBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
dim <- c(25, 55, 30, 50)
plotScattererMap(dim)
plotHistogramBeta("trihedral", dim, filter = TRUE)
plotHistogramBeta("random volume", dim, filter = TRUE)
tri_alpha <- data.frame(
X = 1:5,
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOYBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB231_232 = c(11.789, 14.22, 13.332, 13.698, 12.304), #SOILBEANS 231-232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
tri_alpha <- data.frame(
X = 1:5,
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOYBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB231_232 = c(11.789, 14.22, 13.332, 13.698, 12.304), #SOILBEANS 231-232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
rv_alpha <- data.frame(
X = 1:5,
SB231_232 = c(8.343, 7.853, 5.892, 6.19, 5.999), #SOILBEANS 231-232
CN43 = c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
WT255 = c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- c(
X = 1:5,
SB231_232c(17.102, 15.553, 10.829, 11.269, 10.28), #SOILBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
tri_alpha <- data.frame(
X = 1:5,
SB231_232 = c(3.149, 4.32, 4.401, 4.573, 4.493), #SOYBEANS 231-232
CN43 = c(2.65, 3.546, 5.529, 5.567, 6.951), #CANOLA 43
WT255 = c(2.743, 4.385, 5.802, 5.442, 4.813) #WHEAT 255
)
tri_beta <- data.frame(
X = 1:5,
SB231_232 = c(11.789, 14.22, 13.332, 13.698, 12.304), #SOILBEANS 231-232
CN43 = c(10.603, 11.911, 14.862, 14.06, 16.534), #CANOLA 43
WT255 = c(10.169, 13.309, 17.049, 15.24, 13.007) #WHEAT 255
)
rv_alpha <- data.frame(
X = 1:5,
SB231_232 = c(8.343, 7.853, 5.892, 6.19, 5.999), #SOILBEANS 231-232
CN43 = c(6.954, 5.886, 5.56, 6.682, 6.028), #CANOLA 43
WT255 = c(5.784, 6.442, 6.552, 6.976, 6.137) #WHEAT 255
)
rv_beta <- c(
X = 1:5,
SB231_232 = c(17.102, 15.553, 10.829, 11.269, 10.28), #SOILBEANS 231-232
CN43 = c(12.92, 11.54, 9.648, 10.779, 10.104), #CANOLA 43
WT255 = c(10.578, 12.226, 12.212, 12.719, 11.37) #WHEAT 255
)
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_alpha, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
ggplot(aes(x = X, y = value, group = variable, color = variable), data = melt(tri_beta, id.vars = "X")) +
xlab("Sample") + ylab("Parameter value") +
geom_point() + geom_line()
