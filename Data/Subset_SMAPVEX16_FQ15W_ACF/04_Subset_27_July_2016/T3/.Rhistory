(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
# dist_tri <- c()
# dist_lh <- c()
# dist_rh <- c()
# sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep(2, times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh1, z = dist_rh, type = "scatter3d", mode = "markers", color = sample, colors = c("red", "blue")) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample, colors = c("red", "blue")) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
similarity_trihedral <- 1 - (2/pi)*acos( hhhh / mod_kennaugh )
similarity_dihedral  <- 1 - (2/pi)*acos( hvhv / mod_kennaugh )
similarity_rand_vol  <- 1 - (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
similarity_narrow_dihedral <- 1 - (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
similarity_cylinder <- 1 - (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
similarity_dipole <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
# dist_tri <- c()
# dist_lh <- c()
# dist_rh <- c()
# sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep(3, times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample) %>%
add_markers() %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/01_Subset_16_May_2016/T3")
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
similarity_trihedral <- 1 - (2/pi)*acos( hhhh / mod_kennaugh )
similarity_dihedral  <- 1 - (2/pi)*acos( hvhv / mod_kennaugh )
similarity_rand_vol  <- 1 - (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
similarity_narrow_dihedral <- 1 - (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
similarity_cylinder <- 1 - (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
similarity_dipole <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
dist_tri <- c()
dist_lh <- c()
dist_rh <- c()
sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep("1th sample", times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample) %>%
add_markers() %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/05_Subset_20_Aug_2016/T3")
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
similarity_trihedral <- 1 - (2/pi)*acos( hhhh / mod_kennaugh )
similarity_dihedral  <- 1 - (2/pi)*acos( hvhv / mod_kennaugh )
similarity_rand_vol  <- 1 - (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
similarity_narrow_dihedral <- 1 - (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
similarity_cylinder <- 1 - (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
similarity_dipole <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
# dist_tri <- c()
# dist_lh <- c()
# dist_rh <- c()
# sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep("5th sample", times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample, colors = c("red", "blue")) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/03_Subset_03_July_2016/T3")
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
similarity_trihedral <- 1 - (2/pi)*acos( hhhh / mod_kennaugh )
similarity_dihedral  <- 1 - (2/pi)*acos( hvhv / mod_kennaugh )
similarity_rand_vol  <- 1 - (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
similarity_narrow_dihedral <- 1 - (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
similarity_cylinder <- 1 - (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
similarity_dipole <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
# dist_tri <- c()
# dist_lh <- c()
# dist_rh <- c()
# sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep("3th sample", times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample, colors = c("red", "blue")) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/02_Subset_09_June_2016/T3")
#GetMax Similarities
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
similarity_trihedral <- 1 - (2/pi)*acos( hhhh / mod_kennaugh )
similarity_dihedral  <- 1 - (2/pi)*acos( hvhv / mod_kennaugh )
similarity_rand_vol  <- 1 - (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
similarity_narrow_dihedral <- 1 - (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
similarity_cylinder <- 1 - (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
similarity_dipole <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
# dist_tri <- c()
# dist_lh <- c()
# dist_rh <- c()
# sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep("2th sample", times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample, colors = c("red", "blue")) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
setwd("~/PolsarAnalysis/Data/Subset_SMAPVEX16_FQ15W_ACF/04_Subset_27_July_2016/T3")
hhhh <- read_data("HHHH", dim)
hvhv <- read_data("HVHV", dim)
vvvv <- read_data("VVVV", dim)
hhhv <- read_complex_data("HHHV", dim)
hhvv <- read_complex_data("HHVV", dim)
hvvv <- read_complex_data("HVVV", dim)
mod_kennaugh <- c(sqrt( hhhh^2 + hvhv^2 + vvvv^2 + 2*Mod(hhhv)^2 + 2*Mod(hhvv)^2 + 2*Mod(hvvv)^2 ))
similarity_trihedral <- 1 - (2/pi)*acos( hhhh / mod_kennaugh )
similarity_dihedral  <- 1 - (2/pi)*acos( hvhv / mod_kennaugh )
similarity_rand_vol  <- 1 - (2/pi)*acos( ( 2*hhhh + hvhv + vvvv ) / ( sqrt(6)*mod_kennaugh ) )
similarity_narrow_dihedral <- 1 - (2/pi)*acos((hhhh + 9*hvhv + 6*Re(hhhv))/
(10*mod_kennaugh) )
similarity_cylinder <- 1 - (2/pi)*acos( ( 9*hhhh + hvhv + 6*Re(hhhv) ) /
(10*mod_kennaugh) )
similarity_dipole <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Re(hhhv) ) /
(2*mod_kennaugh) )
similarity_left_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv - 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_right_helix <- 1 - (2/pi)*acos( ( hvhv + vvvv + 2*Im(hvvv) ) /
(2*mod_kennaugh) )
similarity_pos_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv - 2*Im(hhhv) ) /
(2*mod_kennaugh) )
similarity_neg_wave <- 1 - (2/pi)*acos( ( hhhh + hvhv + 2*Im(hhhv) ) /
(2*mod_kennaugh) )
max <- pmax(similarity_trihedral, similarity_dihedral, similarity_rand_vol, similarity_narrow_dihedral,
similarity_cylinder, similarity_dipole, similarity_left_helix, similarity_right_helix,
similarity_pos_wave, similarity_neg_wave, na.rm = TRUE)
idx <- which(max == similarity_trihedral)
# dist_tri <- c()
# dist_lh <- c()
# dist_rh <- c()
# sample <- c()
dist_tri <- c(dist_tri, (pi/2)*(1 - similarity_trihedral[idx]))
dist_lh <- c(dist_lh, (pi/2)*(1 - similarity_left_helix[idx]))
dist_rh <- c(dist_rh, (pi/2)*(1 - similarity_right_helix[idx]))
sample <- c(sample, rep("4th sample", times = length(idx)))
plot_ly(x = dist_tri, y = dist_lh, z = dist_rh, type = "scatter3d", mode = "markers", color = sample, colors = c("red", "blue", "yellow", "green", "magenta")) %>%
layout(scene = list(
xaxis = list(title = "Trihedral"),
yaxis = list(title = "Left helix"),
zaxis = list(title = "Right helix")))
sb_tri_alpha <- data.frame(
SB101 = c(2.331, 3.95, 3.81, 4.314, 4.798), #SOYBEANS 101
SB231 = c(3.109, 4.124, 3.779, 4.672, 4.864), #SOYBEANS 231
SB232 = c(3.039, 4.752, 4.553, 4.217, 4.02) #SOYBEANS 232
)
sb_tri_beta <- data.frame(
SB101 = c(10.086, 13.849, 11.209, 12.227, 13.957), #SOYBEANS 101
SB231 = c(11.554, 13.649, 11.216, 13.837, 13.805), #SOYBEANS 231
SB232 = c(11.602, 15.506, 13.68, 12.532, 11.28) #SOYBEANS 232
)
sb_tri_mean <- sb_tri_alpha / (sb_tri_alpha + sb_tri_beta)
sb_tri_mean$day <- c(1, 25, 49, 73, 97)
library(reshape2)
data <- melt(sb_tri_mean, id.vars = "day")
data <- data[2:15,]
#Analysis per sample
ggplot() +
geom_point(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_point() + geom_line() +
geom_line(aes(x = x, y = beta * x ^ alpha, colour = "red"))
x <- seq(from = 1, to = 100, by = 0.1)
#Analysis per sample
ggplot() +
geom_point(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_point() + geom_line() +
geom_line(aes(x = x, y = beta * x ^ alpha, colour = "red"))
#Analysis per sample
ggplot() +
geom_point(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_point() + geom_line()# +
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_point() + geom_line()# +
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_point()# +
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value")# +
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x + 4 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x + 1 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x + 0.5 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x + 0.25 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x + 0.3 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/x + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/(x+10) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/(x+12) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/(x+20) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/(x+18) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/(x+15) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -1/(2*x+30) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(2*(x+15))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(1.2*(x+15))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(1.1*(x+15))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.8*(x+15))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.8*(x+16))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.8*(x+1))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.8*(x+18))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.8*(x+19))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+19))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+20))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+21))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+25))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+23))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+22))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+20))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.8*(x+20))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_line(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+20))^(-1) + 0.27 , colour = "red"))
#Analysis per sample
ggplot() +
geom_point(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+20))^(-1) + 0.27 , colour = "red"))
pt_data <- data
pt_data$day <- log(pt_data$day)
pt_data$value <- log(pt_data$value)
alpha <- cov(pt_data$value, pt_data$day) / sd(pt_data$day)^2
beta <- mean(pt_data$value) - alpha * mean(pt_data$day)
beta <- exp(beta)
ggplot() +
geom_line(aes(x = x, y = beta * x ^ alpha, colour = "red"))
#Analysis per sample
ggplot() +
geom_point(aes(x = day, y = value, group = variable, color = variable), data = data) +
xlab("Sample") + ylab("Proportion value") +
geom_line(aes(x = x, y = -(0.7*(x+20))^(-1) + 0.27 , colour = "red")) +
geom_line(aes(x = x, y = beta * x ^ alpha, colour = "blue"))
