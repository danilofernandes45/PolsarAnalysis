x = [200, 2000, 250, 44, 20, 10]
x = array(200, 2000, 250, 44, 20, 10)
x = array(200, 2000, 250, 44, 20, 10);
x = vector(200, 2000, 250, 44, 20, 10);
x <- c(200, 2000, 250, 44, 20, 10)
hist(x)
y <- equalize(x)
y <- equalize(x, range = c(0,1), levels = 256)
library(EBImage)
install.packages(EBImage)
source("https://bioconductor.org/biocLite.R")
biocLite("EBImage")
y <- equalize(x)
library(EBImage)
library(tiff)
biocLite("EBImage")
histeq(x)
library(IM)
install.packages("IM")
library(IM)
histeq(x)
y <- histeq(x)
y
x
y<-ecdf(x)(x)
y
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
nrow <- 4512
ncol <- 3300
file_HHHH <- file("MLC_Data/HHHH.mlc", "rb")
file_HVHV <- file("MLC_Data/HVHV.mlc", "rb")
file_VVVV <- file("MLC_Data/VVVV.mlc", "rb")
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol) #Resolução imagem 15900x3300
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/haywrd_mlc.png")
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/pauli_haywrd_mlc.png")
setwd("~/PolsarAnalysis/Read")
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
nrow <- 4512
ncol <- 3300
file_HHHH <- file("MLC_Data/HHHH.mlc", "rb")
file_HVHV <- file("MLC_Data/HVHV.mlc", "rb")
file_VVVV <- file("MLC_Data/VVVV.mlc", "rb")
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol) #Resolução imagem 15900x3300
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/haywrd_mlc.png")
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/pauli_haywrd_mlc.png")
library(png)
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
nrow <- 4512
ncol <- 3300
file_HHHH <- file("MLC_Data/HHHH.mlc", "rb")
file_HVHV <- file("MLC_Data/HVHV.mlc", "rb")
file_VVVV <- file("MLC_Data/VVVV.mlc", "rb")
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol) #Resolução imagem 15900x3300
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/haywrd_mlc.png")
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/pauli_haywrd_mlc.png")
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol)
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/foulum_mlc.png")
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol)
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/foulum_mlc.png")
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target="Images/pauli_foulum_mlc.png")
x<-"mlc"
x
print(x)
y <- "hihi "+x
y <- paste("hi", x)
y
y <- paste("hi", x, sep="_")
y
y <- paste("hi", x, sep="")
y
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
generate_image <- function(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, tag){
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol)
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target = paste("Images/image_", tag,".png", sep=""))
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target = paste("Images/pauli_image_",co,".png", sep=""))
}
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
generate_direct_image(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, "co")
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
generate_image(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, "co")
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
generate_image(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, "co")
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
generate_image <- function(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, tag){
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol)
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target = paste("Images/image_", tag,".png", sep=""))
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target = paste("Images/pauli_image_",tag,".png", sep=""))
}
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
generate_image(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, "co")
library("png")
fill_matrix_from_mlc <- function(file_HHHH, file_HVHV, file_VVVV, nrow, ncol) {
data_HHHH <- matrix( readBin(file_HHHH, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_HVHV <- matrix( readBin(file_HVHV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
data_VVVV <- matrix( readBin(file_VVVV, double(), n = nrow * ncol, size = 4, endian = "little"),
nrow = nrow, ncol = ncol, byrow = TRUE)
amplitude_matrix <- array(0, dim = c(nrow, ncol, 3))
amplitude_matrix[,,1] <- data_HHHH
amplitude_matrix[,,2] <- data_HVHV
amplitude_matrix[,,3] <- data_VVVV
return(amplitude_matrix)
}
pauli_decomposition <- function(matrix, nrow, ncol){
pauli_matrix <- array(0, dim = c(nrow, ncol, 3))
pauli_matrix[,,1] <- matrix[,,1] + matrix[,,2]
pauli_matrix[,,2] <- abs( matrix[,,3] - matrix[,,1] )
pauli_matrix[,,3] <- 2 * matrix[,,2]
return(pauli_matrix)
}
equalize <- function(data, nrow, ncol){
data[,,1] <- matrix(ecdf(data[,,1])(data[,,1]), nrow = nrow, ncol = ncol)
data[,,2] <- matrix(ecdf(data[,,2])(data[,,2]), nrow = nrow, ncol = ncol)
data[,,3] <- matrix(ecdf(data[,,3])(data[,,3]), nrow = nrow, ncol = ncol)
return(data)
}
generate_image <- function(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, tag){
amplitude_matrix <- fill_matrix_from_mlc(file_HHHH, file_HVHV, file_VVVV, nrow , ncol)
#Close files
close(file_HHHH)
close(file_HVHV)
close(file_VVVV)
#Remove file from RAM memory
rm(file_HHHH, file_HVHV, file_VVVV)
#Direct projection of Z on colors' space
equalized_matrix <- equalize(amplitude_matrix, nrow, ncol)
writePNG(equalized_matrix, target = paste("Images/", tag, "_image.png", sep=""))
rm(equalized_matrix)
#Pauli decomposition
pauli_matrix <- pauli_decomposition(amplitude_matrix, nrow, ncol)
rm(amplitude_matrix)
equalized_matrix <- equalize(pauli_matrix, nrow, ncol)
writePNG(equalized_matrix, target = paste("Images/",tag ,"_pauli_image.png", sep=""))
}
#Source: PolSARPro
#Link: https://earth.esa.int/documents/653194/658149/EMISAR_Foulum-C3
nrow <- 1100
ncol <- 1772
file_HHHH <- file("CO_Data/hhhh.co", "rb")
file_HVHV <- file("CO_Data/hvhv.co", "rb")
file_VVVV <- file("CO_Data/vvvv.co", "rb")
generate_image(file_HHHH, file_HVHV, file_VVVV, nrow , ncol, "co")
